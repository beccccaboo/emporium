/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface.supplier.manager;

import business.DB4OUtil.DB4OUtil;
import business.EcoSystem;
import business.enterprise.Enterprise;
import business.organization.Organization;
import business.role.Role;
import business.userAccount.UserAccount;
import business.workQueue.CollectionWorkRequest;
import business.workQueue.WorkRequest;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import userInterface.LoginJPanel;

/**
 *
 * @author Arpit
 */
public class SupplierManager extends javax.swing.JPanel {

    /**
     * Creates new form SupplierManager
     */
    private JPanel mainPanel;
    private UserAccount account;
    private Enterprise enterprise;
    private EcoSystem business;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    public SupplierManager(JPanel mainPanel, UserAccount account, Enterprise enterprise, EcoSystem business) {
        initComponents();
        business = dB4OUtil.retrieveSystem();
        this.mainPanel = mainPanel;
        this.enterprise = enterprise;
        this.account = account;

        populateLoginDetails();
        populateChart();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        pnlChart = new javax.swing.JPanel();
        lblHeader = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblHeader1 = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        tblLog = new javax.swing.JTable();
        btnViewRequestItem = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        lblWastageValue = new javax.swing.JLabel();
        lblWastage = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(1000, 1000));
        setVerifyInputWhenFocusTarget(false);

        pnlChart.setLayout(new java.awt.BorderLayout());

        lblHeader.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblHeader.setText("Restaurant Worker Work Area - Employee Report");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlChart, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(243, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(lblHeader)
                .addGap(39, 39, 39)
                .addComponent(pnlChart, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(275, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("View Employee", jPanel1);

        lblHeader1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblHeader1.setText("Restaurant Worker Work Area - Request Log");

        tblLog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Raised Date", "Raised By", "Status", "Quantity(in pounds)", "Collected By", "Logistics", "Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(tblLog);

        btnViewRequestItem.setText("View Request Item");
        btnViewRequestItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewRequestItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 32, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 951, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(152, 152, 152)
                                .addComponent(lblHeader1, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnViewRequestItem)
                        .addGap(49, 49, 49))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(lblHeader1)
                .addGap(50, 50, 50)
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnViewRequestItem)
                .addGap(166, 166, 166))
        );

        jTabbedPane1.addTab("View RequestLog", jPanel2);

        lblName.setText("Welcome, ");

        lblWastageValue.setText("<wastage_avoided>");

        lblWastage.setText("Total wastage avoided :");

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(271, 271, 271)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblWastage)
                    .addComponent(lblName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblWastageValue, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(btnLogout)
                .addGap(18, 18, 18)
                .addComponent(lblName)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWastage)
                    .addComponent(lblWastageValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 857, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewRequestItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewRequestItemActionPerformed

        int selectedRow = tblLog.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null,
                "Please select a request item to view details",
                "Information",
                JOptionPane.INFORMATION_MESSAGE);
        } else {
            CollectionWorkRequest cwr = (CollectionWorkRequest) tblLog.getValueAt(selectedRow, 2);

            ViewLogItem supplierWorkerViewLogItemJPanel = new ViewLogItem(mainPanel, cwr, business);
            CardLayout layout = (CardLayout) mainPanel.getLayout();
            mainPanel.add("SupplierWorkerViewLogItemJPanel", supplierWorkerViewLogItemJPanel);
            layout.next(mainPanel);
        }
    }//GEN-LAST:event_btnViewRequestItemActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed

        mainPanel.removeAll();

        CardLayout layout = (CardLayout) mainPanel.getLayout();
        LoginJPanel loginPanel = new LoginJPanel(mainPanel);
        mainPanel.add("loginPanel", loginPanel);
        layout.next(mainPanel);

        dB4OUtil.storeSystem(business);
    }//GEN-LAST:event_btnLogoutActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnViewRequestItem;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblHeader1;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblWastage;
    private javax.swing.JLabel lblWastageValue;
    private javax.swing.JPanel pnlChart;
    private javax.swing.JTable tblLog;
    // End of variables declaration//GEN-END:variables

    private void populateLoginDetails() {
        double quantity = 0;
        lblName.setText(lblName.getText() + " " + account.getEmployee().getName());
        for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount ua : o.getUserAccountDirectory().getUserAccountList()) {
                if ((ua.getRole().getRoleType().getValue()).equals(Role.RoleType.SupplierWorker.getValue())) {
                    for (WorkRequest wr : ua.getWorkQueue().getWorkRequestList()) {
                        CollectionWorkRequest cwr = (CollectionWorkRequest) wr;
                        quantity += cwr.getTotalQuantity();
                    }
                }
            }
        }
        lblWastageValue.setText(quantity + " pounds");
    }
    
    public void populateChart() {
        DefaultCategoryDataset dataSet = new DefaultCategoryDataset();
        double wastageAvoided = 0;

        for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount ua : o.getUserAccountDirectory().getUserAccountList()) {
                if ((ua.getRole().getRoleType().getValue()).equals(Role.RoleType.SupplierWorker.getValue())) {
                    String name = ua.getEmployee().getName();
                    for (WorkRequest wr : ua.getWorkQueue().getWorkRequestList()) {
                        if (wr instanceof CollectionWorkRequest) {
                            CollectionWorkRequest cwr = (CollectionWorkRequest) wr;
                            wastageAvoided += cwr.getTotalQuantity();
                        }
                    }
                    dataSet.setValue(wastageAvoided, "Wastage Avoided", name);
                    wastageAvoided = 0;
                }
            }
        }

        JFreeChart chart = ChartFactory.createBarChart("Wastage Avoided by each Employee",
                "Employee",
                "Wastage Avoided",
                dataSet,
                PlotOrientation.VERTICAL, true, true, false);

        CategoryPlot plot = chart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.BLACK);

        // ChartFrame chartFrame = new ChartFrame("Wastage Avoided by each Employee", chart, true);
        // chartFrame.setVisible(true);
        // chartFrame.setSize(500,400); 
        ChartPanel chartPanel = new ChartPanel(chart);
        pnlChart.removeAll();
        pnlChart.add(chartPanel, BorderLayout.CENTER);
        pnlChart.validate();

    }
    
    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblLog.getModel();
        dtm.setRowCount(0);

        for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount ua : o.getUserAccountDirectory().getUserAccountList()) {
                if ((ua.getRole().getRoleType().getValue()).equals(Role.RoleType.SupplierWorker.getValue())) {
                    for (WorkRequest wr : ua.getWorkQueue().getWorkRequestList()) {
                        if (wr instanceof CollectionWorkRequest) {
                            CollectionWorkRequest cwr = (CollectionWorkRequest) wr;

                            Object row[] = new Object[7];
                            row[0] = cwr.getRequestDate();
                            row[1] = cwr.getRaisedBy().getEmployee().getName();
                            row[2] = cwr;
                            row[3] = cwr.getTotalQuantity();
                            row[4] = cwr.getDeliverToConsumer() == null ? "Undelivered" : cwr.getDeliverToConsumer();
                            row[5] = cwr.getDeliveredByLogistics() == null ? "Undelivered" : cwr.getDeliveredByLogistics();
                            row[6] = cwr.getDeliveryCost() == 0d ? "Undelivered" : "$" + cwr.getDeliveryCost();

                            dtm.addRow(row);
                        }
                    }
                }
            }
        }
    }

}
