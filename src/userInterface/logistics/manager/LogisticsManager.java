/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface.logistics.manager;

/**
 *
 * @author Arpit
 */
public class LogisticsManager extends javax.swing.JPanel {

    /**
     * Creates new form LogisticsManager
     */
    public LogisticsManager() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btnAssigntoEmployee = new javax.swing.JButton();
        cmbWorker = new javax.swing.JComboBox();
        lblWorker = new javax.swing.JLabel();
        btnDetails = new javax.swing.JButton();
        lblHeader1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequests = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lblHeader2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRequests1 = new javax.swing.JTable();
        btnViewDetails = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        cmbNGO = new javax.swing.JComboBox();
        btnGenerateAll = new javax.swing.JButton();
        btnGenerateInovice = new javax.swing.JButton();
        lblHeader = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        tblDetails = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();

        setMinimumSize(new java.awt.Dimension(1000, 1000));

        btnAssigntoEmployee.setText("Assign to Employee");
        btnAssigntoEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssigntoEmployeeActionPerformed(evt);
            }
        });

        cmbWorker.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblWorker.setText("Worker:");

        btnDetails.setText("View Details");
        btnDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailsActionPerformed(evt);
            }
        });

        lblHeader1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblHeader1.setText("Logistics Manager Work Area - Requests");

        tblRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request from", "Pickup", "Drop", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequests);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHeader1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(550, 550, 550)
                            .addComponent(btnDetails))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(lblWorker)
                            .addGap(18, 18, 18)
                            .addComponent(cmbWorker, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnAssigntoEmployee))))
                .addContainerGap(212, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(lblHeader1)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbWorker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWorker)
                    .addComponent(btnAssigntoEmployee))
                .addGap(37, 37, 37)
                .addComponent(btnDetails)
                .addContainerGap(422, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Work Requests", jPanel1);

        lblHeader2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblHeader2.setText("Logistics Manager Work Area - Work Log");

        tblRequests1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request from", "Pickup", "Drop", "Employee Assigned To", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblRequests1);

        btnViewDetails.setText("View Details");
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHeader2, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 819, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(731, 731, 731)
                        .addComponent(btnViewDetails)))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(lblHeader2)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108)
                .addComponent(btnViewDetails)
                .addContainerGap(418, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Work Log", jPanel2);

        lblName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblName.setText("NGO Name:");

        cmbNGO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNGOActionPerformed(evt);
            }
        });

        btnGenerateAll.setText("Generate All Invoices");
        btnGenerateAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateAllActionPerformed(evt);
            }
        });

        btnGenerateInovice.setText("Generate Invoice");
        btnGenerateInovice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateInoviceActionPerformed(evt);
            }
        });

        lblHeader.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblHeader.setText("Logistics Manager Work Area - Generate Invoices");

        tblDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Job Completion Date", "Request Status", "Cost", "Invoice Generated", "Paid"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(tblDetails);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbNGO, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(277, 277, 277)
                                .addComponent(btnGenerateAll)
                                .addGap(28, 28, 28)
                                .addComponent(btnGenerateInovice, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3))
                    .addComponent(lblHeader, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(229, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(lblHeader)
                .addGap(49, 49, 49)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(cmbNGO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerateInovice)
                    .addComponent(btnGenerateAll))
                .addContainerGap(409, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Generate Invoices", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 988, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 838, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(" ", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbNGOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNGOActionPerformed
        // TODO add your handling code here:
        NGOEnterprise ngo = (NGOEnterprise) cmbNGO.getSelectedItem();
        if (ngo != null) {
            populateTable(ngo);
        }
    }//GEN-LAST:event_cmbNGOActionPerformed

    private void btnGenerateAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateAllActionPerformed

        NGOEnterprise ngo = (NGOEnterprise) cmbNGO.getSelectedItem();
        boolean generated = false;

        for (int i = 0; i < tblDetails.getRowCount(); i++) {
            WorkRequest wr = (WorkRequest) tblDetails.getValueAt(i, 1);
            if (wr instanceof CollectionWorkRequest) {
                CollectionWorkRequest cwr = (CollectionWorkRequest) wr;
                if (!cwr.getPaid() && !cwr.getInvoiceGenerated()) {
                    generated = true;

                    PaymentWorkRequest pwr = new PaymentWorkRequest();
                    cwr.setInvoiceGenerated(true);
                    pwr.setCollectionWorkRequest(cwr);
                    pwr.setStatus(RequestStatus.getInvoiceStatusMessage(1));
                    pwr.setSender(account);

                    for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                        if (e.getName().equals(ngo.getName())) {
                            for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                                if (o instanceof NGOManagerOrganization) {
                                    o.getWorkQueue().getWorkRequestList().add(pwr);
                                    break;
                                }
                            }
                        }
                    }

                    // Add to own work queue
                    account.getWorkQueue().getWorkRequestList().add(pwr);

                }
            }
        }
        if (!generated) {
            JOptionPane.showMessageDialog(null, "All invoices already generated", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        JOptionPane.showMessageDialog(null, "All ungenerated invoices are now generated", "Information", JOptionPane.INFORMATION_MESSAGE);
        populateTable(ngo);
    }//GEN-LAST:event_btnGenerateAllActionPerformed

    private void btnGenerateInoviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateInoviceActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblDetails.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null,
                "Please select a request to generate invoice for",
                "Warning",
                JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            CollectionWorkRequest cwr = (CollectionWorkRequest) tblDetails.getValueAt(selectedRow, 1);
            String status = cwr.getStatus();
            if (status.equals(pickupRequestStatusList.get(5)) || status.equals(pickupRequestStatusList.get(6))) {
                if (cwr.getPaid()) {
                    JOptionPane.showMessageDialog(null,
                        "Selected Invoice has already been paid for",
                        "Information",
                        JOptionPane.INFORMATION_MESSAGE);
                    return;
                }

                if (cwr.getInvoiceGenerated()) {
                    JOptionPane.showMessageDialog(null,
                        "Selected Invoice has already been generated",
                        "Information",
                        JOptionPane.INFORMATION_MESSAGE);
                    return;
                }

                NGOEnterprise ngo = (NGOEnterprise) cmbNGO.getSelectedItem();

                PaymentWorkRequest pwr = new PaymentWorkRequest();
                cwr.setInvoiceGenerated(true);
                pwr.setCollectionWorkRequest(cwr);
                pwr.setStatus(RequestStatus.getInvoiceStatusMessage(1));
                pwr.setSender(account);

                for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                    if (e.getName().equals(ngo.getName())) {
                        for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                            if (o instanceof NGOManagerOrganization) {
                                o.getWorkQueue().getWorkRequestList().add(pwr);
                                break;
                            }
                        }
                    }
                }

                // Add to own work queue
                account.getWorkQueue().getWorkRequestList().add(pwr);
                JOptionPane.showMessageDialog(null, "Invoice request raised with NGO for further processing", "Information", JOptionPane.INFORMATION_MESSAGE);
                populateTable(ngo);
            } else {
                JOptionPane.showMessageDialog(null,
                    "Request not delivered yet to generate an Invoice for",
                    "Warning",
                    JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnGenerateInoviceActionPerformed

    private void btnAssigntoEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssigntoEmployeeActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequests.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null,
                "Please select a request item to view details",
                "Warning",
                JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            CollectionWorkRequest request = (CollectionWorkRequest) tblRequests.getValueAt(selectedRow, 3);
            if (request.getStatus().equals(RequestStatus.getPickupStatusMessage(2))) {
                request.setSender(account);
                request.setStatus(RequestStatus.getPickupStatusMessage(3));
                request.setDeliveredBy((UserAccount) cmbWorker.getSelectedItem());

                // Assign to own queue
                account.getWorkQueue().getWorkRequestList().add(request);

                // Assign to selected worker's queue
                UserAccount acc = (UserAccount) cmbWorker.getSelectedItem();
                acc.getWorkQueue().getWorkRequestList().add(request);

                request.setReceiver(acc);
                JOptionPane.showMessageDialog(null, "Request forwarded to logistics worker", "Information", JOptionPane.INFORMATION_MESSAGE);

                populateTable();
            } else {
                JOptionPane.showMessageDialog(null,
                    "Request not in the proper state to be processed",
                    "Warning",
                    JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
    }//GEN-LAST:event_btnAssigntoEmployeeActionPerformed

    private void btnDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailsActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequests.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null,
                "Please select a request item to view details",
                "Warning",
                JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            CollectionWorkRequest request = (CollectionWorkRequest) tblRequests.getValueAt(selectedRow, 3);

            LogisticsManagerViewRequestDetailsJPanel logisticsManagerViewRequestDetailsJPanel = new LogisticsManagerViewRequestDetailsJPanel(userProcessContainer, request);
            userProcessContainer.add("LogisticsManagerViewRequestDetailsJPanel", logisticsManagerViewRequestDetailsJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnDetailsActionPerformed

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequests.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null,
                "Please select a request item to view details",
                "Warning",
                JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            CollectionWorkRequest request = (CollectionWorkRequest) tblRequests.getValueAt(selectedRow, 4);

            LogisticsManagerViewRequestDetailsJPanel logisticsManagerViewRequestDetailsJPanel = new LogisticsManagerViewRequestDetailsJPanel(userProcessContainer, request);
            userProcessContainer.add("LogisticsManagerViewRequestDetailsJPanel", logisticsManagerViewRequestDetailsJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnViewDetailsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssigntoEmployee;
    private javax.swing.JButton btnDetails;
    private javax.swing.JButton btnGenerateAll;
    private javax.swing.JButton btnGenerateInovice;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JComboBox cmbNGO;
    private javax.swing.JComboBox cmbWorker;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblHeader1;
    private javax.swing.JLabel lblHeader2;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblWorker;
    private javax.swing.JTable tblDetails;
    private javax.swing.JTable tblRequests;
    private javax.swing.JTable tblRequests1;
    // End of variables declaration//GEN-END:variables
}
